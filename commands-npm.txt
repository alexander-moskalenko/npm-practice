# ЧТО ТАКОЕ npm
Package - это директория с одним или несколькими модулями и файлом package.json
Package manager - это инструмент, позволяющий управлять процессом установки, настройки и обновления пакетов
npm - node package manager, единый стандарт для серверного и клиентского javascript
package.json - это файл манифест, который содержит мета-данные.
dependencies - это зависимости, т.е. прочие пакеты, без которых не будет работать пакет
devDependencies - необходимы разработчику, например пакеты сборки
Экономит время
Поддерживает большие проекты
Для работы с GitHub

# УСТАНОВКА И ОБНОВЛЕНИЕ npm
npm install npm@latest -g
npm help - справка
npm install -h - помощь по конкретной команде

# СПРАВКА ПО РАБОТЕ С npm
npm help npm
npm help -l

# ПОИСК И УСТАНОВКА ПАКЕТОВ
npm search jquery

# ЗАВИСИМОСТИ ПАКЕТА
npm ls -g --depth=0

ls C:\Users\Admin\AppData\Roaming\npm

# ПОИСК И УСТАНОВКА ПАКЕТОВ
npm i -g http-server
http-server

Локальная установка предпочтительнее, обусловлено тем, что на компьютере могут быть разные проекты, зависящие от разных версий одних и тех же npm пакетов
Глобально установленный пакет может войти в конфликт с прочими пакетами установленными локально

npm i normalize.css bootstrap

npm uninstall <package-name>

rm -rf node_modules

cat .gitignore

npm init

npm outdated
semver.org/lang/ru
npm update - апдейт до Wanted версии

npm install gulp -D

mkdir dist src && touch dist/index.html
mv index.js src
npm install -D webpack@latest webpack-cli
npx webpack

npm-скрипты позволяют удобно запускать:
тестирование приложения, сборку приложения на продакшен, локальный сервер для разработки, любые зависимости, вашего приложения с различными опциями

start - как нужно запускать приложение
test

npm start npm test
npm run 

touch src/scss/main.scss

npm i node-sass -D
scss: "node-sass --output-style compressed -o dist/css src/scss"
node-sass установлен локально, так что вызывать его мы можем либо при помощи npx, либо при помощи node-скриптов
npm run scss

build: "webpack --output dist/bundle.js"
npm run build

echo node_modules > .gitignore

git clone https://github.com/alexander-moskalenko/npm-practice.git npm-practice-test
cd !$ or npm-practice-test

===========

# Tutorial for Beginers npm 
https://www.youtube.com/watch?v=6fj0cpmMiVg&list=PLC3y8-rFHvwhgWwm5J3KqzX47n7dwWNrq
Package manager
Reusable code => Modules
Reusable code, Package.json => Package
Reusable code (Developer A) => npm Registry => Developer B
node -v
npm -v
npm help
npm <cmd> -h //quick help on <cmd>
npm search-help update //search in help for update
Package.json - Manage dependencies and its versions; - Scripts (initial build)
npm init
npm init --yes 
npm config set init-author-name
npm set init-license
npm config get init-author-name
npm get init-license
npm config delete init-license
npm install <packege name>
npm install <package name> --save //save dependencies in package.json
npm install <package name> --save-dev //create development dependencies
npm uninstall <package name> --save
npm uninstall <package name> --save-dev
npm install <package name> -g //install globally
npm uninstall <package name> -g //uninstall globally
npm list
npm list --depth 1
npm list --global true --depth 0 //list of packages installed globally
npm install <package name>@3.3.0
npm install npm@latest -g //run as administrator
package.json - dependencies - "<package name>": "*" //update to the latest
npm update <package name> --save
npm update --dev --save-dev
npm update -g <package name>
npm list --depth 0 //extraneous 
npm prune //remove extraneous

Shorthands and Other CLI Niceties - docs.npmjs.com/misc/config
